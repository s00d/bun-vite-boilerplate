version: '3.8'

services:
  app:
    container_name: myapp
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
#      - DB_HOST=mysql
#      - DB_PORT=3306
#      - DB_USER=myapp
#      - DB_PASSWORD=secretpassword
#      - DB_NAME=myapp
    volumes:
      - .:/app
#      - ./data:/app/data
      - /app/node_modules

#  postgres:
#    container_name: myapp-postgres
#    image: postgres:latest
#    restart: unless-stopped
#    environment:
#      - POSTGRES_USER=myapp
#      - POSTGRES_PASSWORD=secretpassword
#      - POSTGRES_DB=myapp
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#
#  redis:
#    container_name: myapp-redis
#    image: redis:latest
#    command: [ "redis-server", "--maxmemory-policy", "noeviction" ]
#    restart: unless-stopped
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#
#  mysql:
#    container_name: myapp-mysql
#    image: mysql:8.3
#    restart: unless-stopped
#    environment:
#      - MYSQL_ROOT_PASSWORD=rootpassword
#      - MYSQL_DATABASE=myapp
#      - MYSQL_USER=myapp
#      - MYSQL_PASSWORD=secretpassword
#    ports:
#      - "3306:3306"
#    volumes:
#      - mysql_data:/var/lib/mysql
#    command: --default-authentication-plugin=mysql_native_password

volumes:
#  postgres_data:
#  mysql_data:
  redis_data:
